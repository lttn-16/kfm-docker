version: '3.8'

services:
  reverse-proxy:
    image: traefik:v3.0
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  mysqldb:
    platform: linux/x86_64
    image: mysql:8.0
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - db:/var/lib/mysql
    labels:
      - "traefik.enable=false"

  backend:
    depends_on:
      - mysqldb
    build: ./backend
    restart: unless-stopped
    env_file: ./.env
    environment:
      - DB_HOST=mysqldb
      - DB_USER=$MYSQLDB_USER
      - DB_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - DB_NAME=$MYSQLDB_DATABASE
      - DB_PORT=$MYSQLDB_DOCKER_PORT
      - ACCESS_TOKEN_SECRET=$ACCESS_TOKEN_SECRET
      - HASH_PASS_USER=$HASH_PASS_USER
    scale: 5
    labels:
      - "traefik.enable=true" 
      - "traefik.http.routers.backend.rule=Host(`$BACKEND_HOST`)"
      - "traefik.http.services.backend.loadbalancer.server.port=$NODE_DOCKER_PORT"

  frontend:
    build: ./frontend
    env_file: ./.env
    depends_on:
      - backend
    labels:
      - "traefik.enable=true" 
      - "traefik.http.routers.frontend.rule=Host(`$FRONTEND_HOST`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=$REACT_DOCKER_PORT"

  frontend-bpt:
    build: ./frontend
    env_file: ./.env
    depends_on:
      - backend
    labels:
      - "traefik.enable=true" 
      - "traefik.http.routers.frontend-bpt.rule=Host(`$FRONTEND_HOST_BPT`)"
      - "traefik.http.services.frontend-bpt.loadbalancer.server.port=$REACT_DOCKER_PORT"

volumes: 
  db: